// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user/user.proto

package user

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AllRequest struct {
	Q                    string   `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllRequest) Reset()         { *m = AllRequest{} }
func (m *AllRequest) String() string { return proto.CompactTextString(m) }
func (*AllRequest) ProtoMessage()    {}
func (*AllRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{0}
}

func (m *AllRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllRequest.Unmarshal(m, b)
}
func (m *AllRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllRequest.Marshal(b, m, deterministic)
}
func (m *AllRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllRequest.Merge(m, src)
}
func (m *AllRequest) XXX_Size() int {
	return xxx_messageInfo_AllRequest.Size(m)
}
func (m *AllRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AllRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AllRequest proto.InternalMessageInfo

func (m *AllRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

type UploadRequest struct {
	File                 []byte   `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadRequest) Reset()         { *m = UploadRequest{} }
func (m *UploadRequest) String() string { return proto.CompactTextString(m) }
func (*UploadRequest) ProtoMessage()    {}
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{1}
}

func (m *UploadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadRequest.Unmarshal(m, b)
}
func (m *UploadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadRequest.Marshal(b, m, deterministic)
}
func (m *UploadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadRequest.Merge(m, src)
}
func (m *UploadRequest) XXX_Size() int {
	return xxx_messageInfo_UploadRequest.Size(m)
}
func (m *UploadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadRequest proto.InternalMessageInfo

func (m *UploadRequest) GetFile() []byte {
	if m != nil {
		return m.File
	}
	return nil
}

type GetUserRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserRequest) Reset()         { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()    {}
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{2}
}

func (m *GetUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserRequest.Unmarshal(m, b)
}
func (m *GetUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserRequest.Marshal(b, m, deterministic)
}
func (m *GetUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserRequest.Merge(m, src)
}
func (m *GetUserRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserRequest.Size(m)
}
func (m *GetUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserRequest proto.InternalMessageInfo

func (m *GetUserRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type User struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username             string   `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	ProfilePic           string   `protobuf:"bytes,4,opt,name=profile_pic,json=profilePic,proto3" json:"profile_pic,omitempty"`
	IsFollowing          uint32   `protobuf:"varint,5,opt,name=is_following,json=isFollowing,proto3" json:"is_following,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{3}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetProfilePic() string {
	if m != nil {
		return m.ProfilePic
	}
	return ""
}

func (m *User) GetIsFollowing() uint32 {
	if m != nil {
		return m.IsFollowing
	}
	return 0
}

type AllResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AllResponse) Reset()         { *m = AllResponse{} }
func (m *AllResponse) String() string { return proto.CompactTextString(m) }
func (*AllResponse) ProtoMessage()    {}
func (*AllResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b283a848145d6b7, []int{4}
}

func (m *AllResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AllResponse.Unmarshal(m, b)
}
func (m *AllResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AllResponse.Marshal(b, m, deterministic)
}
func (m *AllResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AllResponse.Merge(m, src)
}
func (m *AllResponse) XXX_Size() int {
	return xxx_messageInfo_AllResponse.Size(m)
}
func (m *AllResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AllResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AllResponse proto.InternalMessageInfo

func (m *AllResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*AllRequest)(nil), "AllRequest")
	proto.RegisterType((*UploadRequest)(nil), "UploadRequest")
	proto.RegisterType((*GetUserRequest)(nil), "GetUserRequest")
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*AllResponse)(nil), "AllResponse")
}

func init() {
	proto.RegisterFile("proto/user/user.proto", fileDescriptor_9b283a848145d6b7)
}

var fileDescriptor_9b283a848145d6b7 = []byte{
	// 282 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x51, 0xcd, 0x4a, 0xc3, 0x40,
	0x10, 0x66, 0xf3, 0x53, 0x74, 0x36, 0x8d, 0xb0, 0x20, 0x84, 0x88, 0x98, 0xc6, 0x4b, 0xf0, 0xb0,
	0x42, 0x7d, 0x82, 0x5e, 0xec, 0x55, 0x22, 0x3d, 0x97, 0x9a, 0x4c, 0x65, 0x61, 0xcd, 0x26, 0xd9,
	0x54, 0xdf, 0xc1, 0xa7, 0x96, 0x9d, 0x34, 0x6a, 0x7b, 0x09, 0xf3, 0xfd, 0xf0, 0x4d, 0xe6, 0x5b,
	0xb8, 0x6e, 0x7b, 0x33, 0x98, 0xc7, 0x83, 0xc5, 0x9e, 0x3e, 0x92, 0x70, 0x9e, 0x02, 0xac, 0xb4,
	0x2e, 0xb1, 0x3b, 0xa0, 0x1d, 0x44, 0x04, 0xac, 0x4b, 0x58, 0xc6, 0x8a, 0xcb, 0x92, 0x75, 0xf9,
	0x3d, 0xcc, 0x37, 0xad, 0x36, 0xbb, 0x7a, 0x92, 0x05, 0x04, 0x7b, 0xa5, 0x91, 0x1c, 0x51, 0x49,
	0x73, 0x9e, 0x41, 0xbc, 0xc6, 0x61, 0x63, 0xb1, 0x9f, 0x5c, 0x31, 0x78, 0xaa, 0x26, 0x8f, 0x5f,
	0x7a, 0xaa, 0xce, 0xbf, 0x19, 0x04, 0x4e, 0x3f, 0x17, 0x5c, 0x5c, 0xb3, 0xfb, 0xc0, 0xc4, 0xa3,
	0x85, 0x34, 0x8b, 0x14, 0x2e, 0xdc, 0xdf, 0x11, 0xef, 0x13, 0xff, 0x8b, 0xc5, 0x1d, 0xf0, 0xb6,
	0x37, 0x6e, 0xeb, 0xb6, 0x55, 0x55, 0x12, 0x90, 0x0c, 0x47, 0xea, 0x45, 0x55, 0x62, 0x01, 0x91,
	0xb2, 0xdb, 0xbd, 0xd1, 0xda, 0x7c, 0xa9, 0xe6, 0x3d, 0x09, 0x33, 0x56, 0xcc, 0x4b, 0xae, 0xec,
	0xf3, 0x44, 0xe5, 0x0f, 0xc0, 0xe9, 0x5e, 0xdb, 0x9a, 0xc6, 0xa2, 0xb8, 0x81, 0xd0, 0xc5, 0xdb,
	0x84, 0x65, 0x7e, 0xc1, 0x97, 0xa1, 0xa4, 0x43, 0x46, 0x6e, 0xd9, 0x01, 0x77, 0xf0, 0x15, 0xfb,
	0x4f, 0x55, 0xa1, 0xc8, 0xc0, 0x5f, 0x69, 0x2d, 0xb8, 0xfc, 0x2b, 0x2c, 0x8d, 0xe4, 0xff, 0xb4,
	0x5b, 0xf0, 0xd7, 0x38, 0x88, 0x2b, 0x79, 0xda, 0x48, 0x3a, 0xc6, 0x8a, 0x05, 0xcc, 0xc6, 0x3e,
	0x45, 0x2c, 0x4f, 0x8a, 0x3d, 0x1a, 0x0a, 0xf6, 0x36, 0xa3, 0x57, 0x79, 0xfa, 0x09, 0x00, 0x00,
	0xff, 0xff, 0xe8, 0x65, 0xb0, 0xe0, 0xae, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	All(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (*AllResponse, error)
	Get(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error)
	Upload(ctx context.Context, opts ...grpc.CallOption) (UserService_UploadClient, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) All(ctx context.Context, in *AllRequest, opts ...grpc.CallOption) (*AllResponse, error) {
	out := new(AllResponse)
	err := c.cc.Invoke(ctx, "/UserService/All", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Get(ctx context.Context, in *GetUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/UserService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Upload(ctx context.Context, opts ...grpc.CallOption) (UserService_UploadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[0], "/UserService/Upload", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceUploadClient{stream}
	return x, nil
}

type UserService_UploadClient interface {
	Send(*UploadRequest) error
	CloseAndRecv() (*User, error)
	grpc.ClientStream
}

type userServiceUploadClient struct {
	grpc.ClientStream
}

func (x *userServiceUploadClient) Send(m *UploadRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *userServiceUploadClient) CloseAndRecv() (*User, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	All(context.Context, *AllRequest) (*AllResponse, error)
	Get(context.Context, *GetUserRequest) (*User, error)
	Upload(UserService_UploadServer) error
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) All(ctx context.Context, req *AllRequest) (*AllResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method All not implemented")
}
func (*UnimplementedUserServiceServer) Get(ctx context.Context, req *GetUserRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedUserServiceServer) Upload(srv UserService_UploadServer) error {
	return status.Errorf(codes.Unimplemented, "method Upload not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_All_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AllRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).All(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserService/All",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).All(ctx, req.(*AllRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/UserService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Get(ctx, req.(*GetUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Upload_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(UserServiceServer).Upload(&userServiceUploadServer{stream})
}

type UserService_UploadServer interface {
	SendAndClose(*User) error
	Recv() (*UploadRequest, error)
	grpc.ServerStream
}

type userServiceUploadServer struct {
	grpc.ServerStream
}

func (x *userServiceUploadServer) SendAndClose(m *User) error {
	return x.ServerStream.SendMsg(m)
}

func (x *userServiceUploadServer) Recv() (*UploadRequest, error) {
	m := new(UploadRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "All",
			Handler:    _UserService_All_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserService_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Upload",
			Handler:       _UserService_Upload_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "proto/user/user.proto",
}
